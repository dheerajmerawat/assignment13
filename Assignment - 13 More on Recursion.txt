Assignment-13: C,C++ and DSA in Depth with Job Assistance
More on Recursion
1. Write a recursive function to calculate sum of first N natural numbers.

#include<stdio.h>
int main()
{
    int k;
    k=f1(5);
    printf("%d",k);
}
int f1(int n)
{
    int s;
    if(n==1)
        return 1;
    s=n+f1(n-1);
    return(s);
}

2. Write a recursive function to calculate sum of first N odd natural numbers

#include<stdio.h>
int sum(int n);
int main()
{
    printf("sum is %d",sum (10));
}
int sum(int n)
{
    if(n==1)
        return (1);
    return  (2*n-1+sum(n-1));

}


3. Write a recursive function to calculate sum of first N even natural numbers

#include<stdio.h>
int sum(int n);
int main()
{
    printf("sum is %d",sum (5));
}
int sum(int n)
{
    if(n==1)
        return (2);
    return  (2*n+sum(n-1));

}

4. Write a recursive function to calculate sum of squares of first n natural numbers

#include<stdio.h>
int sum(int);
main()
{
    printf("%d",sum(5));
}
int sum (int n)
{
    if(n==1)
        return (1);
    return(n*n+sum(n-1));
}




5. Write a recursive function to calculate sum of digits of a given number

#include<stdio.h>
int sum(int);
main()
{
    int x;
    printf("Enter a number");
    scanf("%d",&x);
    printf("sum is %d",sum(x));
    getch();
}
int sum(int x)
{
    if(x/10==0)
        return (x);
    return(x%10+sum(x/10));
}
6. Write a recursive function to calculate factorial of a given number

#include<stdio.h>
int fact(int);
int main()
{
    printf("Factorial of 5 is %d",fact(5));
    printf("\n");
    return 0;
}
int fact(int n)
{
    if(n==0 || n==1)
        return 1;
    return n*fact(n-1);
}

7. Write a recursive function to calculate HCF of two numbers

#include<stdio.h>
 
int HCF(int, int);
 
int main()
{
    int a, b, result;
 
    printf("Enter the two numbers to find their HCF: ");
    scanf("%d%d", &a, &b);
    result = HCF(a, b);
    printf("The HCF of %d and %d is %d.\n", a, b, result);
}
 
int HCF(int a, int b)
{
    while (a != b)
    {
        if (a > b)
        {
            return HCF(a - b, b);
        }
        else
        {
            return HCF(a, b - a);
        }
    }
    return a;
}
8. Write a recursive function to print first N terms of Fibonacci series

#include<stdio.h>
main()
int fib(int);
int i,n;
printf("Enter how many terms of fibonacci series you want to see");
scanf("%d",&n);
for(i=1;i<=n;i++)
    printf("%d",fib(i));
getch();
}
int fib(int n)
{
    if(n==1||n==2)
        return(1);
    return(fib(n-1)+fib(n-2));
}
9. Write a program in C to count the digits of a given number using recursion.

#include<stdio.h>
int count(int);
int main()
{
    int n,c;
    printf("Enter a Number");
    scanf("%d",&n);
    c=count(n);
    printf("\n count digit are=%d",c);
    return 0;
}
int count(int n)
{
    static int c=0;
    if(n==0)
        return c;
    else
    {
        c++;
        return count(n/10);
    }
}

10. Write a program in C to calculate the power of any number using recursion.

#include<stdio.h>
int power(int, int);
int main()
{
    int b,p,r;
    printf("Enter base value");
    scanf("%d",&b);
    printf("Enter power value");
    scanf("%d",&p);
    r=power(b,p);
    printf("\nresult=%d",r);
    return 0;
}
int power (int b, int p)
{
    if(p==0)
        return 1;
    else
        return b*power(b,p-1);
}
